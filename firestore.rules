rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Global user profiles (from registration)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Coach-specific data
    match /coaches/{coachId} {
      // Allow coach to read/write their own top-level document (if any data is stored there directly)
      // This rule might be too permissive if sensitive data is at the root of /coaches/{coachId}
      // For now, assuming subcollections are the primary data stores.
      allow read, write: if request.auth != null && request.auth.uid == coachId;

      // Students subcollection
      match /students/{studentId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == coachId;
      }

      // Plans subcollection
      match /plans/{planId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == coachId;
      }

      // Locations subcollection
      match /locations/{locationId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == coachId;
      }

      // ClassSessions subcollection
      match /classSessions/{classSessionId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == coachId;
      }

      // BookedClasses subcollection
      match /bookedClasses/{bookedClassId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == coachId;
      }

      // Settings subcollection (documents within it)
      match /settings/{settingDocId} { // e.g., settingDocId could be 'availability' or 'profile'
        allow read, write: if request.auth != null && request.auth.uid == coachId;
      }
    }
  }
}
