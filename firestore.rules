
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access to the 'users' collection for authenticated users,
    // restricted to their own user document.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow authenticated users to read/write their own student data
    // And allow admin/owner to read all student data (example, adjust if needed)
    match /students/{studentId} {
      allow read: if request.auth != null; // Or more restrictive: request.auth.uid == resource.data.coachId;
      allow create, update, delete: if request.auth != null; // Typically, only the coach/admin should write.
    }

    // Allow authenticated users to read/write their own class session configurations
    match /classSessions/{sessionId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null; // Assuming coach owns these
    }

    // Allow authenticated users to read/write locations
    match /locations/{locationId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null; // Assuming coach owns these
    }

    // Allow authenticated users to read/write plans
    match /plans/{planId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null; // Assuming coach owns these
    }

    // Example: Allow only admins to write to a 'settings' collection.
    // match /settings/{settingId} {
    //   allow read: if request.auth != null;
    //   allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    // }
  }
}
